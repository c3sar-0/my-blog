- User tab on header
- Render header content conditionally
- New Post page
- Edit Post page
- Send number of comments and if user has bookmarked in post view
- Finish post previews (icons, title)
- Add handlers to send like and bookmark requests
- Add comment form
- Make image optional, if not image, the preview is just the rest (it's smaller)
- User page
- Tags
- Make list and detail serializers separate, specially for posts. (!)
- Make request util (try/catch). Check firebase's video short on that
- Comments likes are not working (deleting them)
- Commenting should update state
- Put post owner actions inside a menu (3 dots), same with delete/edit comment.
- Editing posts (submiting) doesn't work. Error in request content-type.
- order bookmarks from date bookmarked
- User description shouldn't have a default on the backend. If not description, put a default on the frontend.
- Add filtering and ordering at the same time
- Add error pages (error elements on App.js)
- If request fails because of token, redirect to login
- Responsive design
- Margin between post img, title and tags is not good on phones (post preview)
- The side bar should be toggleable everywhere on the site (CHECK DEV.TO)
- Make images preserve ratio (CHECK DEV.TO)
- Add margin variables
- Solve Read Later page margins. Add the margin variables.
- Add like, save button, and small author under image/title to post detail
- Add ability to remove cover image
- THE COVER IMAGES ARE NOT DELETED WHEN UPDATED OR WHEN THE POST IS DELETED
- Pagination

- WHEN HOVER SEARCH ICONTURN BG A BIT GRAY LIKE GMAIL
- Dark theme
- Finish author preview
- Notifications:
  user/notifications this way you can get the notifications each time the user clicks the bell.
  also get the notifications when the root header is rendered in the frontend.

- Make the images responsive (I mean the size). E.g.: the profile images are tiny on the profile previews but they are full size. (see the network tab, they take up too much bandwith)
- Add show more to wall comments? (only for phones)
- When no search found or no posts saved, etc, put a fallback like "no posts found, try something different"
- Cool css background?
- Periodic unused files cleaning
- Change "image_url" to "cover_img"
- APPLY REST PRACTICES
- /api lists endpoints
- Make code dry. Among much other stuff, the code for the profile picture image borders on the frontend is repeated various times.
- There is some functionality in the views that maybe should be on the serializers. Maybe.

- Use the model I created. Look for images without post and delete them.
- When editing or creating a post, if I leave without saving, the images uploaded to the server should be deleted. Same when editing user
  I've discarded the idea of temporary files. I'll just handle all that on the frontend. I just need to be able to send DELETE requests to the backend for deleting the images.
  I think:
    · Uploading images:
      - Besides saving the image to storage, create a PostContentImage instance with the url of the image and the user being request.user. Leave the post null.
    · Creating posts:
      - Create the post.
      - Look for the request user's images whose url matches the post content (text) image urls. Assing the new post to those.
      # This is what was missing before:
      - Check for all the user's uploaded content images. If any of them are not related to any post, delete it.
    · Updating posts:
      - Besides deleting the image from storage, delete the model instance.

    I MAY HAVE THE SAME PROBLEM WITH THE COVER IMAGE; is it deleted if replaced or deleted from the post?
    PERO ESTO IGUAL NO SIRVE EN EL CASO DE QUE SUBA UNA IMAGEN Y ME VAYA SIN GUARDAR (PARA ESO EL HOOK)

    I think all of that is not necesary if I just delete the images uploaded for a post that is not saved (leaving without saving). The previous approach of comparing new and old was good.
